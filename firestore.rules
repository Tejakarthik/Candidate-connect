rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS collection
    // Anyone can create their own user document upon registration.
    // Any authenticated user can read user profiles (for mentions, etc.).
    // A user can only update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }
    
    // CANDIDATES collection
    match /candidates/{candidateId} {
      // Allow create for any authenticated user.
      allow create: if request.auth != null;
      
      // Allow read and update only if the user's UID is in the `assignedUsers` array.
      allow read, update: if request.auth.uid in resource.data.assignedUsers;
      
      // Allow delete only if the user is the original creator.
      allow delete: if request.auth.uid == resource.data.createdBy;

      // Sub-collections (notes, history)
      // Inherit the access rules from the parent candidate document.
      function hasCandidateAccess() {
        return get(/databases/$(database)/documents/candidates/$(candidateId)).data.assignedUsers.hasAny([request.auth.uid]);
      }

      // NOTES sub-collection
      match /notes/{noteId} {
        allow read, create: if hasCandidateAccess();
        // Allow update/delete only if the user is the author of the note.
        allow update, delete: if hasCandidateAccess() && request.auth.uid == resource.data.authorId;
      }
      
      // HISTORY sub-collection (Audit Trail)
      match /history/{historyId} {
        // Allow read for anyone with access to the candidate.
        allow read: if hasCandidateAccess();
        // Allow create for anyone with access to the candidate.
        allow create: if hasCandidateAccess();
        // Explicitly deny updates or deletes to make the audit trail immutable.
        allow update, delete: if false;
      }
    }
    
    // NOTIFICATIONS sub-collection (nested under users)
    match /users/{userId}/notifications/{notificationId} {
      // A user can read, update, or delete their own notifications.
      allow read, update, delete: if request.auth.uid == userId;
      // Any authenticated user can create a notification (e.g., for a mention).
      allow create: if request.auth != null;
    }
  }
} 